@import 'common';
$distance: 200px;
$ball-size: 20px;
$ball-offset: 40px;
$ball-orbit-speed: 2s;

@mixin ball {
  width: $ball-size;
  height: $ball-size;
  transform-style: preserve-3d;
  animation-duration: $ball-orbit-speed;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

@mixin visual-test {
  background-color: rgba(255, 0, 255, 0.3);
}

.site {
  width: 100%;
  height: 100%;
}

.layer {
  @include anime;

  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  transform-style: preserve-3d;
}

.layer-content {
  transform: scale3d(1, 1, 1);

  &--backward {
    filter: blur(3px);
    transform: scale3d(0.9, 0.9, 0.9);
  }
}

.layer-spinner {
  @include flex-center;

  flex-direction: column;
  background-color: rgba(255, 255, 255, 0.5);
  opacity: 0;
  transform: scale3d(1.11, 1.11, 1.11);
  pointer-events: none;
  z-index: 1000;

  &--backward {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

.spinner {
  @include flex-center;
  // @include visual-test;

  position: relative;
  width: 100px;
  height: 100px;
  transform-style: preserve-3d;
  transform: rotateX(-30deg);
  perspective: $distance;
}

.msg {
  text-align: center;
  line-height: 80px;
  color: rgba(0, 0, 0, 0.8);
  font-size: 16px;
  font-weight: 300;
}

.ball {
  @include ball();
  // @include visual-test;

  position: absolute;

  @for $i from 1 through 3 {
    &#{$i} {
      animation-name: orbit#{$i};
    }
  }

  @each $index, $color in (1, #ff8598), (2, #fff), (3, #7d8a2e) {
    &#{$index} > .center {
      @include shadow-dp-1;
      @include ball();

      border-radius: 50%;
      background-color: $color;
      animation-name: spin#{$index};
    }
  }
}

@for $i from 1 through 3 {
  @keyframes orbit#{$i} {
    0% {
      transform: rotateY($i * 120deg) rotateX(0deg) translateZ($ball-offset);
    }

    100% {
      transform: rotateY($i * 120deg + 360deg) rotateX(0deg) translateZ($ball-offset);
    }
  }

  @keyframes spin#{$i} {
    0% {
      transform: rotateY($i * -120deg + 0deg) rotateX(30deg);
    }

    100% {
      transform: rotateY($i * -120deg - 360deg) rotateX(30deg);
    }
  }
}
